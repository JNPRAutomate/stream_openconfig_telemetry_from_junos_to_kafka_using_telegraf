[[inputs.jti_openconfig_telemetry]]
  ## List of Junos devices to collect telemetry from
  servers = ["100.123.1.0:32768", "100.123.1.3:32768"]
  ## Authentication details
  username = "jcluser"
  password = "Juniper!1"
  ## Client ID must be unique when connecting from multiple instances of telegraf to the same device
  client_id = "telegraf"
  ## Frequency to get data
  sample_frequency = "2000ms"
  ## Sensors to subscribe
  sensors = ["/interfaces/", "/network-instances/network-instance/protocols/protocol/bgp/"]
  ## Delay between retry attempts of failed streams. Defaults to 1000ms. 
  ## Failed streams/calls will not be retried if 0 is provided
  retry_delay = "1000ms"
  ## To treat all string values as tags, set this to true
  str_as_tags = false

[[outputs.kafka]]
  ## kafka brokers
  brokers = ["100.123.35.0:9092"]
  ## Kafka topic 
  topic = "juniper"
  ## Compression
  ##  0 : No compression
  ##  1 : Gzip compression
  ##  2 : Snappy compression
  ##  3 : LZ4 compression
  compression_codec = 0
  ##  This is used to tell to the broker how it should acknowledge data to the producer 
  ##   0 : the producer never waits for an acknowledgement from the broker.
  ##       This option provides the lowest latency but the weakest guarantee.
  ##   1 : the producer gets an acknowledgement after the leader has received the data. 
  ##       This option provides better guarantee as the producer waits until the server acknowledges 
  ##       the request as successful. 
  ##       Only messages that were written to the now-dead leader but not yet replicated will be lost 
  ##       if the leader die.
  ##   -1: the producer gets an acknowledgement after all replicas have received the data. 
  ##       This option provides the best durability, we guarantee that no messages will be lost as 
  ##       long as at least one in sync replica remains.
  required_acks = -1
  ## The maximum number of times to retry sending a metric before failing
  max_retry = 3
  ## Data format to output.
  data_format = "json" 
